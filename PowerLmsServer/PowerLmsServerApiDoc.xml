<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PowerLmsServer</name>
    </assembly>
    <members>
        <member name="T:PowerLmsServer.Managers.AccountManager">
            <summary>
            账号管理器。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.AccountManager.#ctor(OW.PasswordGenerator)">
            <summary>
            构造函数。
            </summary>
            <param name="passwordGenerator"></param>
        </member>
        <member name="M:PowerLmsServer.Managers.AccountManager.CreateNew(System.String,System.String@,System.Guid@,System.IServiceProvider)">
            <summary>
            创建一个新账号。
            </summary>
            <param name="loginName"></param>
            <param name="pwd"></param>
            <param name="id"></param>
            <param name="service">当前范围的服务容器。</param>
        </member>
        <member name="M:PowerLmsServer.Managers.AccountManager.GetAccountFromToken(System.Guid,System.IServiceProvider)">
            <summary>
            获取缓存上下文。当前版本未实现缓存，未来将使用缓存加速。
            </summary>
            <param name="token">登录令牌。</param>
            <param name="scope">范围服务容器。</param>
            <returns>上下文对象，可能是null如果出错。</returns>
        </member>
        <member name="M:PowerLmsServer.Managers.AccountManager.IsAdmin(PowerLms.Data.Account)">
            <summary>
            是否是超管。
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:PowerLmsServer.Managers.AccountManager.IsMerchantAdmin(PowerLms.Data.Account)">
            <summary>
            是否是商管。
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:PowerLmsServer.Managers.OwContext">
            <summary>
            与Token生存期对应的上下文。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.OwContext.#ctor(System.IServiceProvider)">
            <summary>
            构造函数。
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="P:PowerLmsServer.Managers.OwContext.Token">
            <summary>
            令牌。
            </summary>
        </member>
        <member name="P:PowerLmsServer.Managers.OwContext.User">
            <summary>
            账号对象。
            </summary>
        </member>
        <member name="P:PowerLmsServer.Managers.OwContext.CreateDateTime">
            <summary>
            这次工作上下文的创建时间。
            </summary>
        </member>
        <member name="P:PowerLmsServer.Managers.OwContext.ServiceProvider">
            <summary>
            当前使用的范围服务容器。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.OwContext.Nop">
            <summary>
            标记当前进行了一次有效操作，这将导致延迟清理时间。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.OwContext.SaveChanges">
            <summary>
            保存变化。
            </summary>
            <returns></returns>
        </member>
        <member name="M:PowerLmsServer.Managers.OwContext.Dispose(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:PowerLmsServer.Managers.AuthorizationManager">
            <summary>
            权限管理器。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.AuthorizationManager.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="T:PowerLmsServer.Managers.CustomerManager">
            <summary>
            客户资料及相关管理器。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.CustomerManager.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="T:PowerLmsServer.Managers.DataDicManager">
            <summary>
            数据字典的服务。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.DataDicManager.#ctor(PowerLmsServer.EfData.PowerLmsUserDbContext,PowerLmsServer.Managers.OwContext,AutoMapper.IMapper)">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="P:PowerLmsServer.Managers.DataDicManager.DbContext">
            <summary>
            获取该管理器的数据库上下文。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.DataDicManager.CopyTo(PowerLms.Data.DataDicCatalog,System.Guid)">
            <summary>
            复制数据字典。调用者需要自己保存更改。
            </summary>
            <param name="catalog"></param>
            <param name="orgId">新组织机构Id。</param>
        </member>
        <member name="M:PowerLmsServer.Managers.DataDicManager.CopyTo``1(System.Collections.Generic.IEnumerable{``0},System.Guid)">
            <summary>
            复制特殊字典到指定的组织机构中。
            </summary>
            <typeparam name="T">字典元素的类型。</typeparam>
            <param name="dataDics"></param>
            <param name="orgId"></param>
        </member>
        <member name="M:PowerLmsServer.Managers.DataDicManager.AddTo``1(System.Collections.Generic.IEnumerable{``0},System.Guid)">
            <summary>
            将一组特殊字典，追加到指定的组织机构中。
            </summary>
            <param name="dataDics">每个对象被更改属性后追加到指定的指定组织机构中。</param>
            <param name="orgId"></param>
        </member>
        <member name="T:PowerLmsServer.Managers.DataDicManagerExtensions">
            <summary>
            <see cref="T:PowerLmsServer.Managers.DataDicManager"/>类扩展方法封装类。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.DataDicManagerExtensions.CopyAllSpecialDataDicBase(PowerLmsServer.Managers.DataDicManager,System.Guid)">
            <summary>
            复制所有特殊字典到一个新组织机构。
            </summary>
            <param name="mng"></param>
            <param name="orgId"></param>
        </member>
        <member name="T:PowerLmsServer.Managers.EntityManager">
            <summary>
            实体常用操作的封装类。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.EntityManager.#ctor(PowerLmsServer.EfData.PowerLmsUserDbContext,AutoMapper.IMapper)">
            <summary>
            构造函数。
            </summary>
            <param name="dbContext"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:PowerLmsServer.Managers.EntityManager.ModifyWithMarkDelete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            修改可软删除的对象集合。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="newValues"></param>
            <returns>true成功修改，调用着需要最终保存数据，false出现错误，调用应放弃保存。</returns>
        </member>
        <member name="M:PowerLmsServer.Managers.EntityManager.Modify``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.ICollection{``0})">
            <summary>
            修改的对象集合。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="newValues"></param>
            <param name="result">在返回true时，这里记录更改的实体类的集合，省略或为null则不记录。返回false时，这里有随机内容。</param>
            <returns>true成功修改，调用着需要最终保存数据，false出现错误，调用应放弃保存。</returns>
        </member>
        <member name="M:PowerLmsServer.Managers.EntityManager.Restore``1(System.Guid)">
            <summary>
            恢复已经被软删除的实体。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PowerLmsServer.Managers.EntityManager.GetAll``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>
            获取一个集合的分页结果。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <param name="startIndex"></param>
            <param name="count">-1则获取所有。</param>
            <returns></returns>
        </member>
        <member name="T:PowerLmsServer.Managers.PagingReturnBase`1">
            <summary>
            返回分页数据的封装类的基类
            </summary>
            <typeparam name="T">集合元素的类型。</typeparam>
        </member>
        <member name="M:PowerLmsServer.Managers.PagingReturnBase`1.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="P:PowerLmsServer.Managers.PagingReturnBase`1.Total">
            <summary>
            集合元素的最大总数量。
            </summary>
        </member>
        <member name="P:PowerLmsServer.Managers.PagingReturnBase`1.Result">
            <summary>
            返回的集合。
            </summary>
        </member>
        <member name="T:PowerLmsServer.Managers.ReturnBase">
            <summary>
            返回对象的基类。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.ReturnBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:PowerLmsServer.Managers.ReturnBase.HasError">
            <summary>
            是否有错误。不设置则使用<see cref="P:PowerLmsServer.Managers.ReturnBase.ErrorCode"/>来判定。
            </summary>
            <value>0没有错误，其它数值含义由应用定义。</value>
        </member>
        <member name="P:PowerLmsServer.Managers.ReturnBase.ErrorCode">
            <summary>
            错误码，参见 ErrorCodes。
            </summary>
        </member>
        <member name="P:PowerLmsServer.Managers.ReturnBase.DebugMessage">
            <summary>
            调试信息，如果发生错误，这里给出简要说明。
            </summary>
        </member>
        <member name="T:PowerLmsServer.Managers.InitializerService">
            <summary>
            初始化服务。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.InitializerService.#ctor(Microsoft.Extensions.Logging.ILogger{PowerLmsServer.Managers.InitializerService},Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,PowerLmsServer.Managers.NpoiManager)">
            <summary>
            构造函数。
            </summary>
            <param name="logger"></param>
            <param name="serviceScopeFactory"></param>
            <param name="npoiManager"></param>
        </member>
        <member name="M:PowerLmsServer.Managers.InitializerService.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="stoppingToken"></param>
            <returns></returns>
        </member>
        <member name="M:PowerLmsServer.Managers.InitializerService.CreateSystemResource(System.IServiceProvider)">
            <summary>
            创建必要的系统资源。
            </summary>
            <param name="svc"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:PowerLmsServer.Managers.InitializerService.InitializeDataDic(System.IServiceProvider)">
            <summary>
            初始化数据字典。
            </summary>
            <param name="svc">范围性服务容器</param>
        </member>
        <member name="M:PowerLmsServer.Managers.InitializerService.CreateAdmin(System.IServiceProvider)">
            <summary>
            创建管理员。
            </summary>
            <param name="svc"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:PowerLmsServer.Managers.JobNumberManager">
            <summary>
            编号生成管理器。
            </summary>
        </member>
        <member name="F:PowerLmsServer.Managers.JobNumberManager._JobNumberDecodingTable">
            <summary>
            工作编码的译码表，不含序号。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.JobNumberManager.Generated(PowerLms.Data.JobNumberRule,PowerLms.Data.Account,System.DateTime)">
            <summary>
            生成编号。
            </summary>
            <param name="rule"></param>
            <param name="account"></param>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="T:PowerLmsServer.Managers.MultilingualManager">
            <summary>
            多语言管理器。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.MultilingualManager.#ctor(PowerLmsServer.Managers.NpoiManager)">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="T:PowerLmsServer.Managers.NpoiManager">
            <summary>
            NOPI基础代码辅助管理器。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.NpoiManager.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.NpoiManager.GetWorkbookFromStream(System.IO.Stream)">
            <summary>
            从流获取Excel工作表。
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:PowerLmsServer.Managers.NpoiManager.GetColumnName(NPOI.SS.UserModel.ISheet)">
            <summary>
            获取指定Excel工作表的列名。
            </summary>
            <param name="sheet"></param>
            <returns></returns>
        </member>
        <member name="M:PowerLmsServer.Managers.NpoiManager.GetJson(NPOI.SS.UserModel.ISheet)">
            <summary>
            将表转换为Json。
            </summary>
            <param name="sheet"></param>
            <returns></returns>
        </member>
        <member name="M:PowerLmsServer.Managers.NpoiManager.ReadExcelFunc(NPOI.SS.UserModel.IWorkbook,NPOI.SS.UserModel.ISheet)">
            <summary>
            读取Excel信息
            </summary>
            <param name="workbook">工作区</param>
            <param name="sheet">sheet</param>
            <returns></returns>
        </member>
        <member name="M:PowerLmsServer.Managers.NpoiManager.WriteToDb``1(System.Data.DataTable,Microsoft.EntityFrameworkCore.DbContext,System.String)">
            <summary>
            将指定表复制到数据库指定表中。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dt"></param>
            <param name="context"></param>
            <param name="destinationTableName"></param>
        </member>
        <member name="M:PowerLmsServer.Managers.NpoiManager.WriteToDb``1(NPOI.SS.UserModel.ISheet,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.DbSet{``0})">
            <summary>
            将表写入指定的对象集合。需要调用<see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges"/>才会写入数据库。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sheet"></param>
            <param name="context"></param>
            <param name="destSet"></param>
        </member>
        <member name="M:PowerLmsServer.Managers.NpoiManager.WriteToExcel``1(System.Collections.Generic.IEnumerable{``0},System.String[],NPOI.SS.UserModel.ISheet)">
            <summary>
            将数据集合写入excel表。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">可以是空集合，此时仅写入表头。</param>
            <param name="columnNames"></param>
            <param name="sheet"></param>
        </member>
        <member name="T:PowerLmsServer.Managers.NpoiManagerExtensions">
            <summary>
            扩展方法封装类。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.NpoiManagerExtensions.SetValue(NPOI.SS.UserModel.ICell,System.Object)">
            <summary>
            设置单元格的值。
            </summary>
            <param name="cell"></param>
            <param name="val"></param>
        </member>
        <member name="T:PowerLmsServer.Managers.OrganizationManager">
            <summary>
            组织机构管理器。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.OrganizationManager.#ctor(PowerLmsServer.EfData.PowerLmsUserDbContext,Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:PowerLmsServer.Managers.OrganizationManager.GetMerchantId(System.Guid,System.Nullable{System.Guid}@)">
            <summary>
            获取指定账户所属的商户Id。
            </summary>
            <param name="accountId"></param>
            <param name="MerchantId"></param>
            <returns>true指定账户所属商户Id,如果不属于任何商户则返回null。false 没有找到指定的用户Id。</returns>
        </member>
        <member name="M:PowerLmsServer.Managers.OrganizationManager.GetMerchantIdFromOrgId(System.Guid,System.Nullable{System.Guid}@)">
            <summary>
            取指定组织机构Id所属的商户Id。
            </summary>
            <param name="orgId">机构Id。</param>
            <param name="MerchantId"></param>
            <returns>true则找到了商户Id，false没有找到。</returns>
        </member>
        <member name="P:PowerLmsServer.Managers.OrganizationManager.Id2Merchants">
            <summary>
            
            </summary>
        </member>
        <member name="P:PowerLmsServer.Managers.OrganizationManager.Id2Orgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:PowerLmsServer.Managers.SystemResourceManager">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
