// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PowerLmsServer.EfData;

#nullable disable

namespace PowerLmsData.Migrations
{
    [DbContext(typeof(PowerLmsUserDbContext))]
    [Migration("20250611112001_25061101")]
    partial class _25061101
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OwDbBase.Tasks.OwTaskStore", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime?>("CompletedUtc")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasComment("任务完成时间，UTC格式，精确到毫秒");

                    b.Property<DateTime>("CreatedUtc")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasComment("任务创建时间，UTC格式，精确到毫秒");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建此任务的用户ID");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("任务执行失败时的错误信息");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("要执行的方法名称");

                    b.Property<string>("ParametersJson")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("任务参数，JSON格式的字符串");

                    b.Property<string>("ResultJson")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("任务执行结果，JSON格式的字符串");

                    b.Property<string>("ServiceTypeName")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("要执行的服务类型的完整名称");

                    b.Property<DateTime?>("StartUtc")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasComment("任务开始执行时间，UTC格式，精确到毫秒");

                    b.Property<byte>("StatusValue")
                        .HasColumnType("tinyint")
                        .HasComment("任务当前执行状态值");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("任务所属的租户ID");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("StatusValue");

                    b.HasIndex("TenantId");

                    b.HasIndex("ServiceTypeName", "MethodName");

                    b.ToTable("OwTaskStores");

                    b.HasComment("长时间运行任务的存储实体");
                });

            modelBuilder.Entity("PowerLms.Data.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreateUtc")
                        .HasColumnType("datetime2")
                        .HasComment("创建该对象的世界时间");

                    b.Property<string>("CurrentLanguageTag")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasComment("使用的首选语言标准缩写。如:zh-CN");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("用户的显示名");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("eMail地址");

                    b.Property<Guid?>("GenderCode")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("性别编码");

                    b.Property<Guid?>("IncumbencyCode")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("在职状态编码");

                    b.Property<int?>("JobNumber")
                        .HasColumnType("int")
                        .HasComment("工号。做业务的人员必须有。");

                    b.Property<byte>("JobPermission")
                        .HasColumnType("tinyint")
                        .HasComment("业务权限。1=个人，2=组织，4=公司。");

                    b.Property<DateTime>("LastModifyDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoginName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("登录名");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("移动电话号码");

                    b.Property<int?>("NodeNum")
                        .HasColumnType("int");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("当前登录的组织机构Id（仅能是公司）。在登陆后要首先设置");

                    b.Property<byte[]>("PwdHash")
                        .HasMaxLength(32)
                        .HasColumnType("varbinary(32)")
                        .HasComment("密码的Hash值");

                    b.Property<Guid?>("QualificationsCode")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("学历编码");

                    b.Property<byte>("ReportPermission")
                        .HasColumnType("tinyint")
                        .HasComment("报表权限。1=个人，2=组织，4=公司，8=商户。");

                    b.Property<byte>("State")
                        .HasColumnType("tinyint")
                        .HasComment("用户状态掩码。D0=1是锁定用户，D1=1用户应尽快更改密码。D2=1标识该用户是全系统超管，D3=1标识该用户是某个商户超管");

                    b.Property<TimeSpan>("Timeout")
                        .HasColumnType("time");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid?>("Token")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("最近使用的Token");

                    b.Property<Guid?>("WorkingStatusCode")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("工作状态编码");

                    b.HasKey("Id");

                    b.HasIndex("EMail");

                    b.HasIndex("LoginName")
                        .IsUnique()
                        .HasFilter("[LoginName] IS NOT NULL");

                    b.HasIndex("Mobile");

                    b.HasIndex("Token");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("PowerLms.Data.AccountPlOrganization", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("用户Id");

                    b.Property<Guid>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("直属组织机构Id或商户Id");

                    b.HasKey("UserId", "OrgId");

                    b.HasIndex("OrgId", "UserId")
                        .IsUnique();

                    b.ToTable("AccountPlOrganizations");

                    b.HasComment("账号所属组织机构多对多表");
                });

            modelBuilder.Entity("PowerLms.Data.AccountRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("账号Id。");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("角色Id。");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建者的唯一标识");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建的时间");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId", "UserId")
                        .IsUnique();

                    b.ToTable("PlAccountRoles");

                    b.HasComment("记录账号与角色关系的类。");
                });

            modelBuilder.Entity("PowerLms.Data.BankInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Account")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("账号。");

                    b.Property<string>("Bank")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("开户行。");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("币种Id。");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("开户名。");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属实体Id。");

                    b.HasKey("Id");

                    b.ToTable("BankInfos");
                });

            modelBuilder.Entity("PowerLms.Data.BusinessTypeDataDic", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasComment("编码，对本系统有一定意义的编码");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("显示的名称");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<short>("OrderNumber")
                        .HasColumnType("smallint")
                        .HasComment("排序序号。越小的越靠前");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<string>("ShortName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("缩写名");

                    b.Property<string>("ShortcutName")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasComment("快捷输入名");

                    b.HasKey("Id");

                    b.ToTable("DD_BusinessTypeDataDics");

                    b.HasComment("业务大类");
                });

            modelBuilder.Entity("PowerLms.Data.CaptchaInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DownloadDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifyDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DownloadDateTime");

                    b.HasIndex("VerifyDateTime");

                    b.ToTable("CaptchaInfos");
                });

            modelBuilder.Entity("PowerLms.Data.ContainerKindCount", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasComment("数量。");

                    b.Property<string>("Kind")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("箱型。");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属业务单据Id。");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("ContainerKindCounts");
                });

            modelBuilder.Entity("PowerLms.Data.CustomerBlacklist", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属客户Id");

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime2")
                        .HasComment("执行时间");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit")
                        .HasComment("来源，1=系统，0=人工。");

                    b.Property<byte>("Kind")
                        .HasColumnType("tinyint")
                        .HasComment("类型，1=加入超额，2=加入超期，3=移除超额，4=移除超期");

                    b.Property<Guid?>("OpertorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("操作员Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId", "Datetime");

                    b.ToTable("CustomerBlacklists");
                });

            modelBuilder.Entity("PowerLms.Data.DataDicCatalog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("数据字典的代码。");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("显示名称");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属组织机构Id。通常这里为null则有不同解释，如通用的模板或超管使用的数据字典。");

                    b.HasKey("Id");

                    b.HasIndex("OrgId", "Code")
                        .IsUnique()
                        .HasFilter("[OrgId] IS NOT NULL AND [Code] IS NOT NULL");

                    b.ToTable("DD_DataDicCatalogs");

                    b.HasComment("专门针对数据字典的目录。");
                });

            modelBuilder.Entity("PowerLms.Data.DocBill", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("金额。冗余字段，所属费用的合计。");

                    b.Property<string>("BillNo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("账单号。");

                    b.Property<string>("BookingNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("订舱编号。");

                    b.Property<string>("Carrier")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("承运人");

                    b.Property<decimal>("ChargeWeight")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasComment("计费重量，单位Kg，3位小数。");

                    b.Property<Guid?>("ChechManId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("审核人Id，为空则未审核");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("datetime2(2)")
                        .HasComment("审核日期，为空则未审核");

                    b.Property<decimal>("ClearAmount")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("已核销金额");

                    b.Property<string>("Consignee")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("收货人");

                    b.Property<string>("Consignor")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("发货人");

                    b.Property<string>("ContainerNum")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("箱量");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("合同号");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建人，建立时系统默认，默认不可更改");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2(2)")
                        .HasComment("新建时间,系统默认，不能更改。");

                    b.Property<string>("CurrTypeId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("币种码");

                    b.Property<string>("DestinationCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("目的港编码");

                    b.Property<string>("DischargeCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("中转港编码");

                    b.Property<string>("DocNo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("业务编号,默认为该业务的JobNo，可修改,不绑定业务表的id。");

                    b.Property<DateTime>("Eta")
                        .HasColumnType("datetime2(2)")
                        .HasComment("到港日期。");

                    b.Property<DateTime>("Etd")
                        .HasColumnType("datetime2(2)")
                        .HasComment("开航日期。");

                    b.Property<string>("GoodsName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("货物名称。");

                    b.Property<string>("HblNo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("分单号");

                    b.Property<DateTime?>("IODate")
                        .HasColumnType("datetime2(2)")
                        .HasComment("审核日期，为空则未审核");

                    b.Property<Guid?>("InscribeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否有效");

                    b.Property<string>("LinkFax")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)")
                        .HasComment("联系人传真");

                    b.Property<string>("LinkMan")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("客户联系人");

                    b.Property<string>("LinkTel")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)")
                        .HasComment("联系人电话");

                    b.Property<string>("LoadingCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("起始港编码");

                    b.Property<string>("MblNo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主单号");

                    b.Property<decimal>("MeasureMent")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasComment("体积，3位小数");

                    b.Property<Guid?>("PackTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("包装类型Id。关联简单字典PackType。");

                    b.Property<Guid?>("PayerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("付款人。选Id");

                    b.Property<int>("PkgsCount")
                        .HasColumnType("int")
                        .HasComment("件数。");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<string>("SoNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("So编号。");

                    b.Property<string>("Vessel")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("船名或航班号");

                    b.Property<string>("Voyage")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("航次");

                    b.Property<decimal>("Weight")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasComment("结算计费重量，3位小数");

                    b.HasKey("Id");

                    b.ToTable("DocBills");
                });

            modelBuilder.Entity("PowerLms.Data.DocFee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("金额，两位小数，可以为负数。");

                    b.Property<DateTime?>("AuditDateTime")
                        .HasColumnType("datetime2(2)")
                        .HasComment("审核日期，为空则未审核。");

                    b.Property<Guid?>("AuditOperatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("审核人Id，为空则未审核。");

                    b.Property<Guid?>("BalanceId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("结算单位，客户资料中为结算单位的客户id。");

                    b.Property<Guid?>("BillId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("账单表中的id");

                    b.Property<Guid?>("ContainerTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("单位，简单字典ContainerType，按票、按重量等");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建人，建立时系统默认，默认不可更改");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2(2)")
                        .HasComment("创建时间，系统默认，不能更改。");

                    b.Property<string>("Currency")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("币种。标准货币缩写。");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("本位币汇率，默认从汇率表调取，Amount乘以该属性得到本位币金额。");

                    b.Property<Guid?>("FeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("费用种类字典项Id");

                    b.Property<Guid?>("GainTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("结算方式，简单字典FeePayType");

                    b.Property<bool>("IO")
                        .HasColumnType("bit")
                        .HasComment("收入或支出，true为收入，false为支出。");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("业务Id");

                    b.Property<DateTime>("PreclearDate")
                        .HasColumnType("datetime2(2)")
                        .HasComment("预计结算日期，客户资料中信用日期自动计算出。");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<decimal>("TotalRequestedAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("已经申请的合计金额。计算属性。");

                    b.Property<decimal>("TotalSettledAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("已经结算的金额。计算属性。");

                    b.Property<decimal>("UnitCount")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("数量");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("单价，4位小数。");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("JobId");

                    b.ToTable("DocFees");
                });

            modelBuilder.Entity("PowerLms.Data.DocFeeRequisition", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("金额,所有子项的金额的求和（需要换算币种）。");

                    b.Property<Guid?>("ApplyTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("结算类型。简单字典ApplyType");

                    b.Property<Guid?>("BalanceId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("结算单位Id。客户资料中选择");

                    b.Property<string>("Bank")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("结算单位开户行，选择后可修改");

                    b.Property<string>("BlanceAccountNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("结算单位账号,选择后可修改");

                    b.Property<string>("Contact")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("结算单位联系人，选择后可修改");

                    b.Property<string>("Currency")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("币种。标准货币缩写。");

                    b.Property<string>("FrNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("申请单号,其他编码规则中【申请单号】自动生成");

                    b.Property<bool>("IO")
                        .HasColumnType("bit")
                        .HasComment("收付，false支出，true收入。");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("发票号");

                    b.Property<string>("InvoiceTitle")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("发票抬头");

                    b.Property<Guid?>("InvoiceTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("发票类型Id，简单字典InvoiceType");

                    b.Property<bool>("IsNeedInvoice")
                        .HasColumnType("bit")
                        .HasComment("要求开发票,true=要求，false=未要求。");

                    b.Property<DateTime?>("MakeDateTime")
                        .HasColumnType("datetime2(2)")
                        .HasComment("制单时间");

                    b.Property<Guid?>("MakerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("制单人Id。员工Id。");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PreReturnDate")
                        .HasColumnType("datetime2(2)")
                        .HasComment("预计回款时间");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2(2)")
                        .HasComment("实际回款时间");

                    b.Property<Guid?>("TaxInvoiceId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("关联的发票Id，冗余属性");

                    b.Property<string>("Tel")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("结算单位联系人电话");

                    b.Property<decimal>("TotalSettledAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("已经结算的金额。计算属性。");

                    b.HasKey("Id");

                    b.ToTable("DocFeeRequisitions");
                });

            modelBuilder.Entity("PowerLms.Data.DocFeeRequisitionItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("本次申请金额");

                    b.Property<Guid?>("FeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("绑定的费用Id");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("申请单Id");

                    b.Property<decimal>("TotalSettledAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("已经结算的金额。计算属性。");

                    b.HasKey("Id");

                    b.ToTable("DocFeeRequisitionItems");
                });

            modelBuilder.Entity("PowerLms.Data.DocFeeTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建者的唯一标识。");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建的时间。");

                    b.Property<Guid?>("JobTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("业务种类id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocFeeTemplates");
                });

            modelBuilder.Entity("PowerLms.Data.DocFeeTemplateItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<decimal>("BasePrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("基价,默认为0.");

                    b.Property<Guid?>("CoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("固定结算单位,当前一项类型选固定客户时必填。");

                    b.Property<byte>("CoKind")
                        .HasColumnType("tinyint")
                        .HasComment("1=货主（业务中的客户）、2=收货人、4=发货人、8=承运人、16=代理人、32=固定客户");

                    b.Property<Guid?>("ContainerTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("单位,简单字典ContainerType。");

                    b.Property<string>("Currency")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("币种。标准货币缩写。");

                    b.Property<Guid?>("FeePayTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("结算方式,简单字典FeePayType。");

                    b.Property<Guid?>("FeesTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment(" 费用种类,费用种类字典Id。");

                    b.Property<short>("FreeDayCount")
                        .HasColumnType("smallint")
                        .HasComment("免费天数。");

                    b.Property<bool>("IO")
                        .HasColumnType("bit")
                        .HasComment("收付，false支出，true收入。");

                    b.Property<decimal>("MinFee")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("最低收费,默认为0.");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("申请单Id");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("单价");

                    b.Property<decimal>("PriceOfGreateOrEqTen")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("10天(含)以上单价。");

                    b.Property<decimal>("PriceOfLessTen")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("10天以下单价");

                    b.HasKey("Id");

                    b.ToTable("DocFeeTemplateItems");
                });

            modelBuilder.Entity("PowerLms.Data.FeesType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasComment("编码，对本系统有一定意义的编码");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasComment("币种代码");

                    b.Property<Guid?>("CurrencyTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("币种Id");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("显示的名称");

                    b.Property<string>("FeeGroupCode")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasComment("费用组代码");

                    b.Property<Guid?>("FeeGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("费用组Id");

                    b.Property<bool>("IsCommission")
                        .HasColumnType("bit")
                        .HasComment("是否佣金,True是佣金。");

                    b.Property<bool>("IsDaiDian")
                        .HasColumnType("bit")
                        .HasComment("是否代垫费用,true垫付。");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<bool>("IsGather")
                        .HasColumnType("bit")
                        .HasComment("是否应收。true是应收。");

                    b.Property<bool>("IsPay")
                        .HasColumnType("bit")
                        .HasComment("是否应付。true是应付。");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属组织机构Id");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("默认单价");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<string>("ShortName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("缩写名");

                    b.Property<string>("ShortcutName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasComment("快捷输入名");

                    b.HasKey("Id");

                    b.ToTable("DD_FeesTypes");

                    b.HasComment("费用种类");
                });

            modelBuilder.Entity("PowerLms.Data.HuochangChuchong", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("CargoSize")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("体积，字符串");

                    b.Property<Guid?>("EaDocId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("运单Id。");

                    b.Property<string>("HblNo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("分单号。");

                    b.Property<decimal>("MeasureMent")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasComment("体积，3位小数");

                    b.Property<int>("PkgsCount")
                        .HasColumnType("int")
                        .HasComment("件数。");

                    b.Property<decimal>("Weight")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasComment("结算计费重量，3位小数");

                    b.HasKey("Id");

                    b.HasIndex("EaDocId");

                    b.ToTable("HuochangChuchongs");
                });

            modelBuilder.Entity("PowerLms.Data.JobNumberReusable", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("回收的时间");

                    b.Property<Guid>("RuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("规则Id");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasComment("可重用的序列号");

                    b.HasKey("Id");

                    b.ToTable("JobNumberReusables");

                    b.HasComment("可重用的序列号");
                });

            modelBuilder.Entity("PowerLms.Data.JobNumberRule", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("BusinessTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("业务类型Id，链接到业务大类表");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasComment("编码，对本系统有一定意义的编码");

                    b.Property<int>("CurrentNumber")
                        .HasColumnType("int")
                        .HasComment("当前未用的最小编号");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("显示的名称");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属组织机构Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<DateTime>("RepeatDate")
                        .HasColumnType("datetime2")
                        .HasComment("记录最后一次归零的日期");

                    b.Property<short>("RepeatMode")
                        .HasColumnType("smallint")
                        .HasComment("归零方式，0不归零，1按年，2按月，3按日");

                    b.Property<string>("RuleString")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("缩写名");

                    b.Property<string>("ShortcutName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasComment("快捷输入名");

                    b.Property<int>("StartValue")
                        .HasColumnType("int")
                        .HasComment("\"归零\"后的起始值");

                    b.HasKey("Id");

                    b.ToTable("DD_JobNumberRules");

                    b.HasComment("业务编码规则");
                });

            modelBuilder.Entity("PowerLms.Data.Multilingual", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasComment("主键。");

                    b.Property<string>("Key")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("键值字符串。如:未登录.登录.标题。");

                    b.Property<string>("LanguageTag")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasComment("主键，也是语言的标准缩写名。");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("内容。");

                    b.HasKey("Id");

                    b.HasIndex("LanguageTag", "Key")
                        .IsUnique()
                        .HasFilter("[Key] IS NOT NULL");

                    b.ToTable("Multilinguals");
                });

            modelBuilder.Entity("PowerLms.Data.OrgTaxChannelAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("地址");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("银行账号");

                    b.Property<string>("BankName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("开户银行名称");

                    b.Property<Guid>("ChannelAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("渠道账号Id");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建人Id");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间(UTC)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("显示名称。");

                    b.Property<string>("Email")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("电子邮件");

                    b.Property<string>("InvoiceHeader")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("作为销方时发票抬头");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasComment("是否为该机构的默认销方信息");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<Guid?>("LastModifyBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("最后修改人Id");

                    b.Property<DateTime?>("LastModifyUtc")
                        .HasColumnType("datetime2")
                        .HasComment("最后修改时间(UTC)。");

                    b.Property<Guid>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("机构Id");

                    b.Property<string>("Phone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("电话");

                    b.Property<string>("Remark")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注说明");

                    b.Property<string>("TaxpayerNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("税务登记号（纳税人识别号）");

                    b.HasKey("Id");

                    b.HasIndex("OrgId", "ChannelAccountId")
                        .IsUnique();

                    b.ToTable("OrgTaxChannelAccounts");
                });

            modelBuilder.Entity("PowerLms.Data.OtherNumberRule", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasComment("规则编码（标准英文名）");

                    b.Property<int>("CurrentNumber")
                        .HasColumnType("int")
                        .HasComment("当前未用的最小编号");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("规则显示名称");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RepeatDate")
                        .HasColumnType("datetime2")
                        .HasComment("记录最后一次归零的日期");

                    b.Property<short>("RepeatMode")
                        .HasColumnType("smallint")
                        .HasComment("归零方式，0不归零，1按年，2按月，3按日");

                    b.Property<string>("RuleString")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("规则字符串。包含前缀，后缀。");

                    b.Property<int>("StartValue")
                        .HasColumnType("int")
                        .HasComment("\"归零\"后的起始值");

                    b.HasKey("Id");

                    b.HasIndex("OrgId", "Code");

                    b.ToTable("DD_OtherNumberRules");
                });

            modelBuilder.Entity("PowerLms.Data.OwAppLogItemStore", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreateUtc")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("ExtraBytes")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid?>("MerchantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ParamstersJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreateUtc");

                    b.HasIndex("ParentId");

                    b.HasIndex("MerchantId", "CreateUtc");

                    b.ToTable("OwAppLogItemStores");
                });

            modelBuilder.Entity("PowerLms.Data.OwAppLogStore", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("FormatString")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("格式字符串。");

                    b.Property<int>("LogLevel")
                        .HasColumnType("int")
                        .HasComment("Trace (0)：包含最详细消息的日志，可能包含敏感数据，默认禁用，不应在生产环境中启用。Debug (1)：用于开发过程中的交互式调查日志，包含对调试有用的信息，无长期价值。Information (2)：跟踪应用程序常规流的日志，具有长期价值。Warning (3)：突出显示异常或意外事件的日志，不会导致应用程序停止。Error (4)：当前执行流因故障而停止时的日志，指示当前活动中的故障。Critical (5)：描述不可恢复的应用程序/系统崩溃或需要立即注意的灾难性故障的日志。None (6)：不用于写入日志消息，指定日志记录类别不应写入任何消息。");

                    b.HasKey("Id");

                    b.ToTable("OwAppLogStores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e410bc88-71b2-4530-9993-c0c0b1105617"),
                            FormatString = "用户:{LoginName}({CompanyName}){OperationType}成功",
                            LogLevel = 2
                        });
                });

            modelBuilder.Entity("PowerLms.Data.OwAppLogView", b =>
                {
                    b.Property<string>("ClientType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ExtraBytes")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FormatString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LogLevel")
                        .HasColumnType("int");

                    b.Property<string>("LoginName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MerchantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OperationIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParamstersJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.ToView("OwAppLogView");
                });

            modelBuilder.Entity("PowerLms.Data.OwMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("消息内容。HTML格式");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建者ID");

                    b.Property<DateTime>("CreateUtc")
                        .HasColumnType("datetime2(3)")
                        .HasComment("创建时间");

                    b.Property<bool>("IsSystemMessage")
                        .HasColumnType("bit")
                        .HasComment("是否是系统消息");

                    b.Property<DateTime?>("ReadUtc")
                        .HasColumnType("datetime2(3)")
                        .HasComment("读取时间");

                    b.Property<string>("Title")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("消息标题。最长64字符。");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("接收用户ID");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "CreateUtc");

                    b.HasIndex("UserId", "ReadUtc");

                    b.ToTable("OwMessages");

                    b.HasComment("系统内消息");
                });

            modelBuilder.Entity("PowerLms.Data.OwSystemLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("ActionId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("行为Id。如操作名.实体名.Id");

                    b.Property<decimal>("ExtraDecimal")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("额外数字，具体意义取决于该条记录的类型。");

                    b.Property<Guid?>("ExtraGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("额外Guid。");

                    b.Property<string>("ExtraString")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("额外的字符串，通常行为Id，最长64字符。");

                    b.Property<string>("JsonObjectString")
                        .HasColumnType("varchar(max)")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属机构Id");

                    b.Property<DateTime>("WorldDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("这个行为发生的世界时间。");

                    b.HasKey("Id");

                    b.HasIndex("OrgId", "ActionId", "WorldDateTime");

                    b.HasIndex("OrgId", "WorldDateTime", "ActionId");

                    b.ToTable("OwSystemLogs");

                    b.HasComment("通用数据库存储的日志实体对象。");
                });

            modelBuilder.Entity("PowerLms.Data.OwWf", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("DocId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("流程文档Id。");

                    b.Property<Guid?>("FirstNodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注。");

                    b.Property<byte>("State")
                        .HasColumnType("tinyint")
                        .HasComment("该工作流所处状态。0=流转中，1=成功完成，2=已被终止（失败）。未来可能有其它状态。");

                    b.Property<Guid?>("TemplateId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属模板的Id。");

                    b.HasKey("Id");

                    b.HasIndex("DocId");

                    b.HasIndex("TemplateId");

                    b.ToTable("OwWfs");

                    b.HasComment("流程实例顶层类。");
                });

            modelBuilder.Entity("PowerLms.Data.OwWfKindCodeDic", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasComment("文档类型Id。文档的类型Code,系统多方预先约定好，所有商户公用，最长16个字符，仅支持英文。");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("此流程的显示名。");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注。");

                    b.HasKey("Id");

                    b.ToTable("WfKindCodeDics");
                });

            modelBuilder.Entity("PowerLms.Data.OwWfNode", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("ArrivalDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("到达此节点的时间，如果是第一个节点则是创建并保存节点的时间。");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("流程Id");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("节点模板的Id。");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("OwWfNodes");

                    b.HasComment("记录工作流实例节点的表");
                });

            modelBuilder.Entity("PowerLms.Data.OwWfNodeItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("审核批示。对非审批人，则是意见。");

                    b.Property<bool?>("IsSuccess")
                        .HasColumnType("bit")
                        .HasComment("是否审核通过");

                    b.Property<byte>("OperationKind")
                        .HasColumnType("tinyint")
                        .HasComment("操作人类型，目前保留为0(审批者)。预计1=抄送人。");

                    b.Property<string>("OpertorDisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("这里冗余额外记录一个操作人的显示名称。可随时更改。");

                    b.Property<Guid?>("OpertorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("文档当前操作人的Id。");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("流程节点Id");

                    b.HasKey("Id");

                    b.HasIndex("OpertorId");

                    b.HasIndex("ParentId");

                    b.ToTable("OwWfNodeItems");

                    b.HasComment("工作流实例节点详细信息。");
                });

            modelBuilder.Entity("PowerLms.Data.OwWfTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("ClientString")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("客户端记录一些必要信息，服务器不使用。");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建者的唯一标识");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建的时间");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("此流程的显示名。");

                    b.Property<string>("KindCode")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasComment("文档类型Id。文档的类型Code,系统多方预先约定好，所有商户公用，最长16个字符，仅支持英文。");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属机构Id");

                    b.HasKey("Id");

                    b.HasIndex("OrgId", "KindCode");

                    b.ToTable("WfTemplates");

                    b.HasComment("流程模板总表");
                });

            modelBuilder.Entity("PowerLms.Data.OwWfTemplateNode", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("ClientString")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("客户端记录一些必要信息，服务器不使用。");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("此节点的显示名。");

                    b.Property<string>("GuardJsonString")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasComment(" 前/后置守卫条件的Json字符串。暂未启用。");

                    b.Property<Guid?>("NextId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("下一个操作人的Id。通常都是职员Id。遇特殊情况，工作流引擎自行解释。为null标识最后一个节点。");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("流程模板Id");

                    b.HasKey("Id");

                    b.HasIndex("NextId");

                    b.HasIndex("ParentId");

                    b.ToTable("WfTemplateNodes");

                    b.HasComment("工作流模板内节点表");
                });

            modelBuilder.Entity("PowerLms.Data.OwWfTemplateNodeItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("ClientString")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("客户端记录一些必要信息，服务器不使用。");

                    b.Property<byte>("OperationKind")
                        .HasColumnType("tinyint")
                        .HasComment("参与者类型，目前保留为0。预计1=抄送人，此时则无视优先度——任意一个审批人得到文档时，所有抄送人同时得到此文档。");

                    b.Property<Guid?>("OpertorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("操作人Id。");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属节点Id。");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasComment("优先级。0最高，1其次，以此类推...。仅当节点类型0时有效。");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("WfTemplateNodeItems");

                    b.HasComment("节点详细信息类");
                });

            modelBuilder.Entity("PowerLms.Data.PlBusinessHeader", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("客户Id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("用户Id");

                    b.Property<Guid>("OrderTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("负责的业务Id。连接业务种类字典。");

                    b.HasKey("CustomerId", "UserId", "OrderTypeId");

                    b.HasIndex("CustomerId");

                    b.ToTable("PlCustomerBusinessHeaders");
                });

            modelBuilder.Entity("PowerLms.Data.PlCargoRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<int?>("CAFRate")
                        .HasColumnType("int")
                        .HasComment("CAF比率，取%值。");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasComment("编码，对本系统有一定意义的编码");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("显示的名称");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属组织机构Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<string>("ShortName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("缩写名");

                    b.Property<string>("ShortcutName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasComment("快捷输入名");

                    b.HasKey("Id");

                    b.ToTable("DD_PlCargoRoutes");

                    b.HasComment("航线");
                });

            modelBuilder.Entity("PowerLms.Data.PlCountry", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasComment("编码，对本系统有一定意义的编码");

                    b.Property<string>("CustomsCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("海关码。项目类型决定有大量与海关的EDI行为，交换使用的码。");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("显示的名称");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属组织机构Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<string>("ShortName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("缩写名");

                    b.Property<string>("ShortcutName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasComment("快捷输入名");

                    b.HasKey("Id");

                    b.ToTable("DD_PlCountrys");

                    b.HasComment("国家");
                });

            modelBuilder.Entity("PowerLms.Data.PlCurrency", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasComment("编码，对本系统有一定意义的编码");

                    b.Property<string>("CustomsCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("海关码。项目类型决定有大量与海关的EDI行为，交换使用的码。");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("显示的名称");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属组织机构Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<string>("ShortName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("缩写名");

                    b.Property<string>("ShortcutName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasComment("快捷输入名");

                    b.HasKey("Id");

                    b.ToTable("DD_PlCurrencys");

                    b.HasComment("币种");
                });

            modelBuilder.Entity("PowerLms.Data.PlCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address_Address")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("详细地址");

                    b.Property<string>("Address_City")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("地市");

                    b.Property<Guid?>("Address_CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("国家编码Id");

                    b.Property<string>("Address_Province")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("省");

                    b.Property<string>("Address_ZipCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasComment("邮政编码");

                    b.Property<string>("Airlines_AirlineCode")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasComment("航空公司2位代码（如国航为CA）");

                    b.Property<Guid?>("Airlines_DocumentsPlaceId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("交单地，简单字典DocumentsPlace");

                    b.Property<string>("Airlines_NumberCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasComment("3位，如国航999");

                    b.Property<Guid?>("Airlines_PayModeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("付款方式Id，关联简单字典BillPaymentMode");

                    b.Property<string>("Airlines_PaymentPlace")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("付款地点");

                    b.Property<bool?>("Airlines_SettlementModes")
                        .HasColumnType("bit")
                        .HasComment("结算方式，cass=true/非Cass=false/空=null");

                    b.Property<decimal?>("BillingInfo_AmountLimited")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("拖欠金额");

                    b.Property<Guid?>("BillingInfo_AmountTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("付费方式Id");

                    b.Property<Guid?>("BillingInfo_CurrtypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("拖欠限额币种Id");

                    b.Property<int?>("BillingInfo_Dayslimited")
                        .HasColumnType("int")
                        .HasComment("信用期限天数");

                    b.Property<bool?>("BillingInfo_IsBlack")
                        .HasColumnType("bit")
                        .HasComment("是否超期黑名单");

                    b.Property<bool?>("BillingInfo_IsCEBlack")
                        .HasColumnType("bit")
                        .HasComment("是否超额黑名单");

                    b.Property<bool?>("BillingInfo_IsExesGather")
                        .HasColumnType("bit")
                        .HasComment("是否应收结算单位");

                    b.Property<bool?>("BillingInfo_IsExesPayer")
                        .HasColumnType("bit")
                        .HasComment("是否应付结算单位");

                    b.Property<bool?>("BillingInfo_IsNeedTrace")
                        .HasColumnType("bit")
                        .HasComment("是否特别注意");

                    b.Property<string>("Code")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("客户编码");

                    b.Property<string>("Contact_EMail")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("电子邮件");

                    b.Property<string>("Contact_Fax")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("传真");

                    b.Property<string>("Contact_Tel")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("电话");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建者的唯一标识");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建的时间");

                    b.Property<string>("CrideCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("纳税人识别号");

                    b.Property<string>("CustomCode")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("海关编码。");

                    b.Property<Guid?>("CustomerLevelId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("客户级别Id");

                    b.Property<string>("InternetAddress")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasComment("网址");

                    b.Property<bool>("IsAirway")
                        .HasColumnType("bit")
                        .HasComment("是否航空公司");

                    b.Property<bool>("IsBalance")
                        .HasColumnType("bit")
                        .HasComment("是否结算单位");

                    b.Property<bool>("IsBookingAgent")
                        .HasColumnType("bit")
                        .HasComment("是否订舱代理");

                    b.Property<bool>("IsConsignee")
                        .HasColumnType("bit")
                        .HasComment("是否收货人");

                    b.Property<bool>("IsConsignor")
                        .HasColumnType("bit")
                        .HasComment("是否发货人");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit")
                        .HasComment("是否报关行");

                    b.Property<bool>("IsCustomsQuarantine")
                        .HasColumnType("bit")
                        .HasComment("是否海关检疫");

                    b.Property<bool>("IsDestAgent")
                        .HasColumnType("bit")
                        .HasComment("是否目的港代理");

                    b.Property<bool>("IsInsure")
                        .HasColumnType("bit")
                        .HasComment("是否保险公司");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("bit")
                        .HasComment("是否卡车公司");

                    b.Property<bool>("IsNotify")
                        .HasColumnType("bit")
                        .HasComment("是否通知人");

                    b.Property<bool>("IsOthers")
                        .HasColumnType("bit")
                        .HasComment("是否其他");

                    b.Property<bool>("IsProvide")
                        .HasColumnType("bit")
                        .HasComment("是否供货商");

                    b.Property<bool>("IsShipOwner")
                        .HasColumnType("bit")
                        .HasComment("是否船公司");

                    b.Property<bool>("IsShipper")
                        .HasColumnType("bit")
                        .HasComment("是否委托单位");

                    b.Property<bool>("IsStock")
                        .HasColumnType("bit")
                        .HasComment("是否仓储公司");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit")
                        .HasComment("是否有效");

                    b.Property<string>("Keyword")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("搜索用的关键字。逗号分隔多个关键字。");

                    b.Property<string>("Name_DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("显示名，有时它是昵称或简称(系统内)的意思");

                    b.Property<string>("Name_Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("正式名称，拥有相对稳定性");

                    b.Property<string>("Name_ShortName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("正式简称，对正式的组织机构通常简称也是规定的");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("编号");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属组织机构的Id。");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<Guid?>("ShipperPropertyId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("货主性质Id");

                    b.Property<string>("TacCountNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("财务编码");

                    b.HasKey("Id");

                    b.ToTable("PlCustomers");
                });

            modelBuilder.Entity("PowerLms.Data.PlCustomerContact", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Account")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("银行账号。");

                    b.Property<string>("Bank")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("开户行。");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("姓名。");

                    b.Property<string>("Keyword")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("搜索用的关键字。逗号分隔多个关键字。");

                    b.Property<string>("Mobile")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("移动电话。");

                    b.Property<string>("Remark")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注。");

                    b.Property<Guid?>("SexId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("性别Id。");

                    b.Property<string>("Title")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("职务/行政级别。");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("PlCustomerContacts");
                });

            modelBuilder.Entity("PowerLms.Data.PlEaDoc", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("By1")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("中转港航班1。");

                    b.Property<string>("By2")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("中转港航班2。");

                    b.Property<string>("By3")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("中转港航班3。");

                    b.Property<decimal>("C_MeasureMent")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasComment("结算体积，3位小数");

                    b.Property<decimal>("C_Netweigh")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasComment("结算计费重量，3位小数");

                    b.Property<int>("C_PkgsCount")
                        .HasColumnType("int")
                        .HasComment("包装件单数。结算件数。");

                    b.Property<decimal>("C_Weight")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasComment("结算重量，3位小数");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("操作员，可以更改相当于工作号的所有者");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("新建时间,系统默认，不能更改。");

                    b.Property<string>("DocNo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("单号");

                    b.Property<Guid?>("GoodsStationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("操作地Id,简单字典goodsstation");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属业务Id");

                    b.Property<string>("JobNo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("业务编号");

                    b.Property<decimal>("M_MeasureMent")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasComment("主单体积，3位小数");

                    b.Property<decimal>("M_Netweigh")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasComment("主单计费重量，3位小数");

                    b.Property<int>("M_PkgsCount")
                        .HasColumnType("int")
                        .HasComment("主件单数。");

                    b.Property<decimal>("M_weight")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasComment("主单重量，3位小数");

                    b.Property<Guid?>("PackStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("外包装状态,简单字典packState");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasComment("操作状态。NewJob初始=0,Arrived 已到货=1,Declared 已申报=2,Delivered 已配送=4,Submitted 已交单=8,Notified 已通知=128");

                    b.Property<string>("To1Code")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("中转港1港口Code,显示三字码即可。");

                    b.Property<string>("To2Code")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("中转港2港口Code,显示三字码即可。");

                    b.Property<string>("To3Code")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("中转港3港口Code,显示三字码即可。");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("PlEaDocs");

                    b.HasComment("空运出口单");
                });

            modelBuilder.Entity("PowerLms.Data.PlEsDoc", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime?>("BargeArrivalDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("驳船到港日期");

                    b.Property<string>("BargeDestinationHarbor")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("驳船目的港");

                    b.Property<string>("BargeLoadingHarbor")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("驳船装船港");

                    b.Property<string>("BargeName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("驳船船名");

                    b.Property<DateTime?>("BargeSailDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("驳船开航日期");

                    b.Property<string>("BargeVoyage")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("驳船船名");

                    b.Property<Guid?>("BillPaymentModeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("付款方式Id");

                    b.Property<string>("BillPaymentPlace")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("付款地点");

                    b.Property<Guid?>("BookingGoodsTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("货种Id。");

                    b.Property<DateTime>("BookingsDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("订舱日期");

                    b.Property<string>("BookingsRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("订舱要求");

                    b.Property<Guid?>("CargoRouteId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("航线字典ID");

                    b.Property<string>("Consigner")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("发货人");

                    b.Property<string>("ConsignerTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("发货人抬头");

                    b.Property<string>("ContainerKindCountString")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("箱量。");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("操作员，可以更改相当于工作号的所有者");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("新建时间,系统默认，不能更改。");

                    b.Property<DateTime?>("CutOffDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("截关日期");

                    b.Property<DateTime?>("CutOffGoodsDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("截货日期");

                    b.Property<string>("DangerousLevel")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("危险级别。");

                    b.Property<string>("DangerousPage")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("危规页码。");

                    b.Property<byte>("DelegationKind")
                        .HasColumnType("tinyint")
                        .HasComment("委托类型。FCL=1、LCL=2、BULK=4。");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("特征。");

                    b.Property<string>("FlashPoint")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("闪点。");

                    b.Property<string>("GoodsName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("品名。");

                    b.Property<Guid?>("GoodsReleaseModeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("放货方式");

                    b.Property<string>("Informers")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("通知人");

                    b.Property<string>("InformersTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("通知人抬头");

                    b.Property<bool>("IsFumigation")
                        .HasColumnType("bit")
                        .HasComment("是否熏蒸");

                    b.Property<bool>("IsPartial")
                        .HasColumnType("bit")
                        .HasComment("是否分批");

                    b.Property<bool>("IsSpecifyLoad")
                        .HasColumnType("bit")
                        .HasComment("是否指装");

                    b.Property<bool>("IsTranshipment")
                        .HasColumnType("bit")
                        .HasComment("是否转运");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属业务Id");

                    b.Property<string>("LoadStyle")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("装运条款。");

                    b.Property<string>("MarkHeader")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("唛头");

                    b.Property<Guid?>("MerchantStyleId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("贸易条款Id。");

                    b.Property<string>("RefrigerationTemperature")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("冷藏温度。");

                    b.Property<Guid?>("SeaPortAreaId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("装船港港区Id。");

                    b.Property<string>("SeaborneRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("海运说明");

                    b.Property<string>("SoNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("S/O编号");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasComment("操作状态。0=初始化单据但尚未操作，1=已报价,2=已订舱,4=已配舱,8=已装箱，16=已申报,32=已出提单,128=已放货。");

                    b.Property<string>("Total1")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("总计1,箱。");

                    b.Property<string>("Total2")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("总计2,货。");

                    b.Property<string>("Total3")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("总计3,合计。");

                    b.Property<Guid?>("TransTermId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("运输条款Id");

                    b.Property<string>("TransitPort")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("中转港");

                    b.Property<string>("UnNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("UN No。");

                    b.Property<string>("Voyage")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("航次");

                    b.Property<DateTime>("WarehousingDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("放舱日期");

                    b.Property<string>("WarehousingNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("进仓编号");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("PlEsDocs");

                    b.HasComment("海运出口单");
                });

            modelBuilder.Entity("PowerLms.Data.PlExchangeRate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2")
                        .HasComment("生效时点");

                    b.Property<Guid>("BusinessTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("业务类型Id");

                    b.Property<string>("DCurrency")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("宿币种码");

                    b.Property<Guid>("DCurrencyId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("宿币种。废弃，请使用 DCurrency 属性。");

                    b.Property<DateTime>("EndData")
                        .HasColumnType("datetime2")
                        .HasComment("失效时点");

                    b.Property<decimal>("Exchange")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("兑换率");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属组织机构Id");

                    b.Property<float>("Radix")
                        .HasColumnType("real")
                        .HasComment("基准，此处默认为100");

                    b.Property<string>("SCurrency")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("源币种码");

                    b.Property<Guid>("SCurrencyId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("源币种.废弃，请使用SCurrency属性。");

                    b.Property<string>("ShortcutName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasComment("快捷输入名");

                    b.HasKey("Id");

                    b.ToTable("DD_PlExchangeRates");

                    b.HasComment("汇率");
                });

            modelBuilder.Entity("PowerLms.Data.PlFileInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("操作员，可以更改相当于工作号的所有者");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("新建时间,系统默认，不能更改。");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("文件的显示名称");

                    b.Property<string>("FileName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("上传时的文件名");

                    b.Property<string>("FilePath")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasComment("文件类型Id。文件的相对路径和全名。");

                    b.Property<Guid?>("FileTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("文件类型Id。关联字典FileType。可能是null，表示这是一个通用文件。");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属实体的Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("PlFileInfos");

                    b.HasComment("文件信息表");
                });

            modelBuilder.Entity("PowerLms.Data.PlIaDoc", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("CargoTypeIdString")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("货物类型字典id的字符串集合，逗号分隔。");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("操作员，可以更改相当于工作号的所有者");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("新建时间,系统默认，不能更改。");

                    b.Property<string>("FollowAircraftFilesIsString")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("简单字典进口随机文件FollowAircraftFiles字典Id的字符串集合，逗号分隔。");

                    b.Property<Guid?>("GoodssSatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("货物状态字典Id。");

                    b.Property<bool?>("IsInspection")
                        .HasColumnType("bit")
                        .HasComment("是否海关查验。");

                    b.Property<bool?>("IsQuarantine")
                        .HasColumnType("bit")
                        .HasComment("是否检疫查验。");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属业务Id");

                    b.Property<Guid?>("OperatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("放行人Id。");

                    b.Property<string>("PickUpCo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("提货公司。");

                    b.Property<DateTime?>("PickUpDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("提货时间。");

                    b.Property<string>("PickUpPerson")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("提货人。");

                    b.Property<string>("PickUpPlace")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("提货地。");

                    b.Property<string>("PositionNumber")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("仓位号。");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("特别说明。");

                    b.Property<DateTime?>("RukuDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("入库日期。");

                    b.Property<int>("ShishouCount")
                        .HasColumnType("int")
                        .HasComment("实收件数。");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasComment("操作状态。0=初始化单据但尚未操作，,已调单=1,已申报=2,已出税=4,海关已放行=8,已入库=16,仓库已放行=128(视同已通知财务)。");

                    b.Property<Guid?>("TradeModeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("贸易方式Id。");

                    b.Property<DateTime?>("XiaobaoDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("实际消保日期，null表示未消保。");

                    b.Property<DateTime?>("YujiXiaobaoDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("预计消保日期。");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("PlIaDocs");

                    b.HasComment("空运进口单");
                });

            modelBuilder.Entity("PowerLms.Data.PlInvoices", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("金额。下属结算单明细的合计。");

                    b.Property<Guid?>("BankId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("收付银行账号,本公司信息中银行id");

                    b.Property<string>("BankSerialNo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("银行流水号。");

                    b.Property<DateTime?>("ConfirmDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("确认时间。");

                    b.Property<Guid?>("ConfirmId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("确认人Id。");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建者的唯一标识。");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建的时间。");

                    b.Property<string>("Currency")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("币种。标准货币缩写。");

                    b.Property<decimal>("ExchangeLoss")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("汇差损益。外币结算时损失的部分");

                    b.Property<DateTime?>("FinanceDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("财务日期。");

                    b.Property<decimal>("FinanceFee")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("财务费用。");

                    b.Property<bool>("IO")
                        .HasColumnType("bit")
                        .HasComment("收付，false支出，true收入。");

                    b.Property<DateTime?>("IoDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("首付日期");

                    b.Property<string>("IoPingzhengNo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("收付凭证号");

                    b.Property<bool>("IsYushoufu")
                        .HasColumnType("bit")
                        .HasComment("是否预收付。");

                    b.Property<Guid?>("JiesuanDanweiId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("结算单位Id。客户资料的id.");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("摘要。");

                    b.Property<string>("Remark2")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("附加说明。");

                    b.Property<decimal>("Surplus")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("余额。");

                    b.HasKey("Id");

                    b.ToTable("PlInvoicess");
                });

            modelBuilder.Entity("PowerLms.Data.PlInvoicesItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("本次核销（结算）金额。");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("结算汇率，用户手工填写。");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RequisitionItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("申请单明细id");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("PlInvoicesItems");
                });

            modelBuilder.Entity("PowerLms.Data.PlIsDoc", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime?>("AnticipateBillDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("预计换单日期。");

                    b.Property<DateTime?>("ArrivedDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("进口日期。");

                    b.Property<string>("BargeName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("驳船船名。");

                    b.Property<string>("BargeSNumber")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("驳船班次。");

                    b.Property<DateTime?>("BargeStartDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("驳船开航日期。");

                    b.Property<DateTime?>("BillDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("实际换单日期。");

                    b.Property<Guid?>("BillModeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("提单方式Id。");

                    b.Property<Guid?>("BillPaymentModeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("付款方式Id。");

                    b.Property<Guid?>("CargoRouteId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("航线字典id。");

                    b.Property<DateTime?>("ContainerFreeDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("免箱期。");

                    b.Property<string>("ContainerNumber")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("箱号。");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("操作员，可以更改相当于工作号的所有者");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("新建时间,系统默认，不能更改。");

                    b.Property<byte>("DelegationKind")
                        .HasColumnType("tinyint")
                        .HasComment("委托类型。FCL=1、LCL=2、BULK=4。");

                    b.Property<DateTime?>("DeliveryDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("提货日期。");

                    b.Property<Guid?>("DestPortId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("目的港港区Id。");

                    b.Property<string>("FileStrings")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("随船文件。服务器不解析，逗号分隔。");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属业务Id");

                    b.Property<Guid?>("MerchantStyleId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("贸易条款Id。");

                    b.Property<Guid?>("PlaceModeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("放货方式字典Id。");

                    b.Property<string>("ShipSNumber")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("船次。");

                    b.Property<string>("SpeelContainerNumber")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("箱封号。");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasComment("操作状态。0=初始化单据但尚未操作，1=已换单,2=已申报,4=海关已放行,8=已提箱，128=已提货。");

                    b.Property<Guid?>("TransTermId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("运输条款Id。");

                    b.Property<DateTime?>("UpToDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("提货日期。");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("PlIsDocs");

                    b.HasComment("海运进口单");
                });

            modelBuilder.Entity("PowerLms.Data.PlJob", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("AccountDate")
                        .HasColumnType("datetime2")
                        .HasComment("出口默认出港日期，进口默认出库日期。");

                    b.Property<string>("Agent")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("代理人");

                    b.Property<DateTime?>("AuditDateTime")
                        .HasColumnType("datetime2(2)")
                        .HasComment("审核日期,未审核则为空");

                    b.Property<Guid?>("AuditOperatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("审核人Id，为空则未审核");

                    b.Property<Guid?>("BusinessManagerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("业务负责人Id");

                    b.Property<Guid?>("CargoType")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("货物类型.简单字典CARGOTYPE");

                    b.Property<string>("CarrieCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("承运人，船公司或航空公司或，二字码。已废弃，使用Guid关联客户表。");

                    b.Property<Guid?>("CarrieId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("承运人Id。关联客户表。");

                    b.Property<string>("CarrierNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("运输工具号，空运显示为航班号，海运显示为船名、陆运显示为卡车号");

                    b.Property<decimal?>("ChargeWeight")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasComment("计费重量,单位Kg,三位小数。委托计费重量，海运显示为净重。");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2")
                        .HasComment("关闭日期");

                    b.Property<string>("Consignee")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("收货人");

                    b.Property<string>("Consignor")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("发货人");

                    b.Property<string>("ContractNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("合同号");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("操作员，可以更改相当于工作号的所有者");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("新建时间,系统默认，不能更改。");

                    b.Property<Guid?>("CustomId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("客户Id");

                    b.Property<Guid?>("CustomerServiceId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("客服Id");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2")
                        .HasComment("提送货日期");

                    b.Property<string>("DestinationCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("目的港，港口代码，显示三字码即可");

                    b.Property<DateTime?>("ETA")
                        .HasColumnType("datetime2")
                        .HasComment("到港日期");

                    b.Property<DateTime?>("Etd")
                        .HasColumnType("datetime2")
                        .HasComment("开航日期。");

                    b.Property<string>("GoodsName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("货物名称");

                    b.Property<string>("GoodsSize")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("尺寸,字符串表达.");

                    b.Property<string>("HblNoString")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("分单号字符串，/分隔多个分单号");

                    b.Property<Guid?>("HoldtypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("揽货类型,简单字典HoldType");

                    b.Property<string>("JobNo")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("工作号");

                    b.Property<byte>("JobState")
                        .HasColumnType("tinyint")
                        .HasComment("工作状态。Operating正操作=2，Operated操作完成=4，Checked已审核=8，Closed已完成=16.");

                    b.Property<Guid?>("JobTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("业务种类id");

                    b.Property<string>("LinkFax")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)")
                        .HasComment("联系人传真");

                    b.Property<string>("LinkMan")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("客户联系人");

                    b.Property<string>("LinkTel")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)")
                        .HasComment("联系人电话");

                    b.Property<string>("LoadingCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("起始港，港口代码，显示三字码即可。");

                    b.Property<string>("MblNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("主单号");

                    b.Property<decimal?>("MeasureMent")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasComment("体积,三位小数,委托体积立方");

                    b.Property<string>("Notify")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("通知人");

                    b.Property<string>("OpCompany")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("操作公司。选择客户资料是订舱代理的客户");

                    b.Property<DateTime?>("OperatingDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("操作时间。");

                    b.Property<Guid?>("OperatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("操作人Id。");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属机构Id");

                    b.Property<Guid?>("PackType")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("包装方式,简单字典PackType");

                    b.Property<int?>("PkgsCount")
                        .HasColumnType("int")
                        .HasComment("包装件数");

                    b.Property<string>("ProfitBriefing")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("利润说明");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<Guid?>("SalesId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("业务员Id");

                    b.Property<Guid?>("ShippingLineManagerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("航线负责人Id");

                    b.Property<string>("SpecialAgent")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("订舱代理。选择客户资料是订舱代理的客户");

                    b.Property<decimal?>("Weight")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasComment("毛重,单位Kg,三位小数。委托重量KG数，海运显示为毛重");

                    b.HasKey("Id");

                    b.HasIndex("OrgId", "JobNo")
                        .IsUnique()
                        .HasFilter("[OrgId] IS NOT NULL AND [JobNo] IS NOT NULL");

                    b.ToTable("PlJobs");
                });

            modelBuilder.Entity("PowerLms.Data.PlLoadingAddr", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Addr")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("详细地址");

                    b.Property<string>("Contact")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("所属客户Id");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属客户Id");

                    b.Property<string>("Tel")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("联系电话");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("PlCustomerLoadingAddrs");
                });

            modelBuilder.Entity("PowerLms.Data.PlMerchant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建者的唯一标识");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建的时间");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("描述");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<string>("ShortcutCode")
                        .HasMaxLength(8)
                        .HasColumnType("char(8)")
                        .HasComment("快捷输入码。服务器不使用。");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int")
                        .HasComment("状态码。0=正常，1=停用。");

                    b.HasKey("Id");

                    b.ToTable("Merchants");

                    b.HasComment("商户");
                });

            modelBuilder.Entity("PowerLms.Data.PlOrganization", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("BaseCurrencyCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasComment("本位币编码");

                    b.Property<Guid?>("BaseCurrencyId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("本位币Id");

                    b.Property<string>("ContractName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("联系人名字");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建者的唯一标识");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建的时间");

                    b.Property<string>("CustomCode")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("海关编码。");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("组织机构描述");

                    b.Property<string>("LegalRepresentative")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("法人代表");

                    b.Property<Guid?>("MerchantId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("商户Id。仅总公司(ParentId 是null)需要此字段指向所属商户，其它情况忽略此字段。");

                    b.Property<int>("Otc")
                        .HasColumnType("int")
                        .HasComment("机构类型，2公司，4下属机构");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属组织机构Id。没有父组织机构是顶层节点总公司，它的父是商户(MerchantId)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<string>("ShortcutCode")
                        .HasMaxLength(8)
                        .HasColumnType("char(8)")
                        .HasComment("快捷输入码。服务器不使用。");

                    b.Property<string>("UnknowNumber")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("工商登记号码（信用证号）。");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("PlOrganizations");
                });

            modelBuilder.Entity("PowerLms.Data.PlPermission", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("正式名称，唯一Id");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("简称");

                    b.Property<string>("ParentId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("所属许可对象的Id。");

                    b.Property<string>("ShortName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("简称");

                    b.HasKey("Name");

                    b.HasIndex("ParentId");

                    b.ToTable("PlPermissions");

                    b.HasComment("权限类。");
                });

            modelBuilder.Entity("PowerLms.Data.PlPort", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("CargoRouteCode")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasComment("所属航线编码。可为空表示该港口不属于任何航线。");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasComment("编码，对本系统有一定意义的编码");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasComment("国家代码。使用标准的国家代码。");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("国家Id。建议使用CountryCode属性替代。");

                    b.Property<string>("CustomsCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("海关码。项目类型决定有大量与海关的EDI行为，交换使用的码。");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("显示的名称");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<int?>("NumCode")
                        .HasColumnType("int")
                        .HasComment("数字码.可空");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属组织机构Id");

                    b.Property<Guid?>("PlCargoRouteId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属航线Id。不推荐使用，请使用CargoRouteCode替代。");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("省");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<string>("ShortName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("缩写名");

                    b.Property<string>("ShortcutName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasComment("快捷输入名");

                    b.HasKey("Id");

                    b.ToTable("DD_PlPorts");

                    b.HasComment("港口");
                });

            modelBuilder.Entity("PowerLms.Data.PlRole", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建者的唯一标识");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建的时间");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属组织机构Id。");

                    b.HasKey("Id");

                    b.ToTable("PlRoles");

                    b.HasComment("角色类。");
                });

            modelBuilder.Entity("PowerLms.Data.PlTaxInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Addr")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("地址");

                    b.Property<string>("BankNoRMB")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("开户行");

                    b.Property<string>("BankNoUSD")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("美金开户行");

                    b.Property<string>("BankStdCoin")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("人民币账号");

                    b.Property<string>("BankUSD")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("美金账户");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属客户Id");

                    b.Property<string>("EMail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("电子邮件地址");

                    b.Property<string>("InvoiceSignAddr")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("发票邮寄地址");

                    b.Property<string>("Mobile")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("手机号");

                    b.Property<string>("Number")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("纳税人识别号");

                    b.Property<int>("TaxRate")
                        .HasColumnType("int")
                        .HasComment("税率");

                    b.Property<string>("Tel")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("电话");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("抬头名称");

                    b.Property<Guid?>("Type")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("纳税人种类Id。简单字典AddedTaxType。");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("PlCustomerTaxInfos");
                });

            modelBuilder.Entity("PowerLms.Data.PlTidan", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间。默认值为创建对象的时间。");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属客户Id");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("提单内容");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("PlCustomerTidans");
                });

            modelBuilder.Entity("PowerLms.Data.RolePermission", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("角色Id。");

                    b.Property<string>("PermissionId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("权限Id。");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建者的唯一标识");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建的时间");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId", "RoleId")
                        .IsUnique();

                    b.ToTable("PlRolePermissions");

                    b.HasComment("记录角色和权限的关系类。");
                });

            modelBuilder.Entity("PowerLms.Data.ShippingContainersKind", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasComment("编码，对本系统有一定意义的编码");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("显示的名称");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<decimal>("Kgs")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("皮重。单位Kg。");

                    b.Property<string>("Kind")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("箱型");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属组织机构Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<string>("ShortName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("缩写名");

                    b.Property<string>("ShortcutName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasComment("快捷输入名");

                    b.Property<string>("Size")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("尺寸");

                    b.Property<byte>("Teu")
                        .HasColumnType("tinyint")
                        .HasComment("TEU");

                    b.HasKey("Id");

                    b.ToTable("DD_ShippingContainersKinds");

                    b.HasComment("集装箱类型");
                });

            modelBuilder.Entity("PowerLms.Data.ShippingLane", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<decimal?>("A100")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("KGS100");

                    b.Property<decimal?>("A1000")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("KGS1000");

                    b.Property<decimal?>("A2000")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("KGS2000");

                    b.Property<decimal?>("A300")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("KGS300");

                    b.Property<decimal?>("A45")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("KGS45");

                    b.Property<decimal?>("A500")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("KGS500");

                    b.Property<decimal>("ArrivalTimeInDay")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("到达时长。单位:天。");

                    b.Property<string>("Contact")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("联系人。");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建者的唯一标识。");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建的时间。");

                    b.Property<string>("EndCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("目的港编码");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2(2)")
                        .HasComment("终止日期");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<decimal?>("KgsM")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("KGS M");

                    b.Property<decimal?>("KgsN")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("KGS N");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属机构Id。");

                    b.Property<string>("Packing")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("包装规范");

                    b.Property<string>("Remark")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("备注");

                    b.Property<string>("Shipper")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("航空公司");

                    b.Property<string>("StartCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("启运港编码");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2(2)")
                        .HasComment("生效日期");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("最后更新者的唯一标识。");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("最后更新的时间。");

                    b.Property<string>("VesslRate")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("航班周期");

                    b.HasKey("Id");

                    b.ToTable("ShippingLanes");
                });

            modelBuilder.Entity("PowerLms.Data.SimpleDataDic", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasComment("编码，对本系统有一定意义的编码");

                    b.Property<Guid?>("CreateAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建人账号Id");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CustomsCode")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasComment("海关码。项目类型决定有大量与海关的EDI行为，交换使用的码。");

                    b.Property<Guid?>("DataDicId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属数据字典目录的Id");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("显示的名称");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<string>("ShortName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("缩写名");

                    b.Property<string>("ShortcutName")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasComment("快捷输入名");

                    b.HasKey("Id");

                    b.HasIndex("DataDicId", "Code");

                    b.ToTable("DD_SimpleDataDics");
                });

            modelBuilder.Entity("PowerLms.Data.SystemResource", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("显示的名称");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("编码，对本系统有一定意义的编码");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("父资源的Id。可能分类用");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("说明");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("DD_SystemResources");
                });

            modelBuilder.Entity("PowerLms.Data.TaxInvoiceChannel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("显示名称");

                    b.Property<string>("InvoiceChannel")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("开票渠道。仅仅是一个标记，服务器通过改标识来决定调用什么接口。");

                    b.Property<string>("InvoiceChannelParams")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasComment("开票渠道参数。Json格式的字符串。包含敏感信息。");

                    b.HasKey("Id");

                    b.ToTable("TaxInvoiceChannels");
                });

            modelBuilder.Entity("PowerLms.Data.TaxInvoiceChannelAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("显示名称。");

                    b.Property<string>("JsonObjectString")
                        .HasColumnType("varchar(max)")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("MerchantId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment(" 商户Id。");

                    b.Property<Guid?>("ParentlId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("渠道Id");

                    b.HasKey("Id");

                    b.ToTable("TaxInvoiceChannelAccounts");
                });

            modelBuilder.Entity("PowerLms.Data.TaxInvoiceInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("ApplicantId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("申请人Id");

                    b.Property<DateTime?>("ApplyDateTime")
                        .HasColumnType("DATETIME2(3)")
                        .HasComment("申请时间");

                    b.Property<DateTime?>("AuditDateTime")
                        .HasColumnType("DATETIME2(3)")
                        .HasComment("审核时间");

                    b.Property<Guid?>("AuditorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("审核人Id");

                    b.Property<string>("BuyerAccount")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("购方账号");

                    b.Property<string>("BuyerAddress")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("购方地址");

                    b.Property<string>("BuyerBank")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("购方开户行");

                    b.Property<string>("BuyerTaxNum")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("购方税号");

                    b.Property<string>("BuyerTel")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("购方电话");

                    b.Property<string>("BuyerTitle")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("购方抬头");

                    b.Property<string>("CallbackUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DocFeeRequisitionId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("费用申请单Id");

                    b.Property<string>("FailReason")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasComment("开票失败原因");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("DATETIME2(3)")
                        .HasComment("开票日期");

                    b.Property<string>("InvoiceItemName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("开票项目名（产品）");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("发票号");

                    b.Property<string>("InvoiceSerialNum")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("发票流水号");

                    b.Property<string>("InvoiceType")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("发票类型");

                    b.Property<string>("InvoiceTypeCode")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("发票类型代码");

                    b.Property<bool>("IsRedLetter")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("推送Mail。设置为空则不推送。");

                    b.Property<string>("Mobile")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("推送手机号。设置为空则不推送。");

                    b.Property<string>("PdfUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasComment("PDF文件下载地址");

                    b.Property<string>("Remark")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注");

                    b.Property<DateTime?>("ReturnInvoiceTime")
                        .HasColumnType("DATETIME2(3)")
                        .HasComment("返回发票号时间");

                    b.Property<string>("SellerAccount")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("销方账号");

                    b.Property<string>("SellerAddress")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("销方地址");

                    b.Property<string>("SellerBank")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("销方开户行");

                    b.Property<string>("SellerInvoiceData")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("销方开票数据");

                    b.Property<string>("SellerTaxNum")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("销方税号");

                    b.Property<string>("SellerTel")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("销方电话");

                    b.Property<string>("SellerTitle")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("销方抬头");

                    b.Property<DateTime?>("SendTime")
                        .HasColumnType("DATETIME2(3)")
                        .HasComment("发送时间");

                    b.Property<byte>("State")
                        .HasColumnType("tinyint")
                        .HasComment("发票状态。0：创建后待审核；1：已审核开票中；2：已开票");

                    b.Property<decimal>("TaxInclusiveAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("含税总金额。由关联的TaxInvoiceInfoItem.TaxInclusiveAmount 合计计算得到。");

                    b.Property<Guid?>("TaxInvoiceChannelAccountlId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("开票渠道Id");

                    b.Property<bool>("WithTax")
                        .HasColumnType("bit")
                        .HasComment("是否含税。服务器不使用。");

                    b.HasKey("Id");

                    b.ToTable("TaxInvoiceInfos");
                });

            modelBuilder.Entity("PowerLms.Data.TaxInvoiceInfoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("GoodsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("商品名称。必填。");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("客户税务信息/开票信息Id");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)")
                        .HasComment("数量");

                    b.Property<string>("SpecType")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("规格型号,可选");

                    b.Property<decimal>("TaxInclusiveAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("含税金额。计算公式：税额 = 单价 * 数量 * 税率。计算结果保留两位小数。");

                    b.Property<decimal>("TaxRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("税率");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("单位,可选");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)")
                        .HasComment("单价（不含税）");

                    b.Property<decimal>("UnitPriceInclusiveTax")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)")
                        .HasComment("含税单价,服务器不使用");

                    b.HasKey("Id");

                    b.ToTable("TaxInvoiceInfoItems");
                });

            modelBuilder.Entity("PowerLms.Data.UnitConversion", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Basic")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("基单位");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否已标记为删除。false(默认)未标记为删除，true标记为删除。");

                    b.Property<Guid?>("OrgId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属组织机构Id");

                    b.Property<float>("Rate")
                        .HasColumnType("real")
                        .HasComment("换算率");

                    b.Property<string>("Rim")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("宿单位");

                    b.Property<string>("ShortcutName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasComment("快捷输入名");

                    b.HasKey("Id");

                    b.ToTable("DD_UnitConversions");
                });

            modelBuilder.Entity("PowerLms.Data.OwWfNode", b =>
                {
                    b.HasOne("PowerLms.Data.OwWf", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PowerLms.Data.OwWfNodeItem", b =>
                {
                    b.HasOne("PowerLms.Data.OwWfNode", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PowerLms.Data.OwWfTemplateNode", b =>
                {
                    b.HasOne("PowerLms.Data.OwWfTemplate", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PowerLms.Data.OwWfTemplateNodeItem", b =>
                {
                    b.HasOne("PowerLms.Data.OwWfTemplateNode", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PowerLms.Data.PlCustomerContact", b =>
                {
                    b.OwnsOne("PowerLms.Data.PlOwnedContact", "Contact", b1 =>
                        {
                            b1.Property<Guid>("PlCustomerContactId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("EMail")
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)")
                                .HasComment("电子邮件");

                            b1.Property<string>("Fax")
                                .HasMaxLength(32)
                                .HasColumnType("nvarchar(32)")
                                .HasComment("传真");

                            b1.Property<string>("Tel")
                                .HasMaxLength(32)
                                .HasColumnType("nvarchar(32)")
                                .HasComment("电话");

                            b1.HasKey("PlCustomerContactId");

                            b1.ToTable("PlCustomerContacts");

                            b1.WithOwner()
                                .HasForeignKey("PlCustomerContactId");
                        });

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("PowerLms.Data.PlMerchant", b =>
                {
                    b.OwnsOne("PowerLms.Data.PlSimpleOwnedAddress", "Address", b1 =>
                        {
                            b1.Property<Guid>("PlMerchantId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Fax")
                                .HasMaxLength(28)
                                .HasColumnType("nvarchar(28)")
                                .HasComment("传真");

                            b1.Property<string>("FullAddress")
                                .HasColumnType("nvarchar(max)")
                                .HasComment("详细地址");

                            b1.Property<string>("Tel")
                                .HasMaxLength(28)
                                .HasColumnType("nvarchar(28)")
                                .HasComment("电话");

                            b1.HasKey("PlMerchantId");

                            b1.ToTable("Merchants");

                            b1.WithOwner()
                                .HasForeignKey("PlMerchantId");
                        });

                    b.OwnsOne("PowerLms.Data.PlOwnedName", "Name", b1 =>
                        {
                            b1.Property<Guid>("PlMerchantId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("DisplayName")
                                .HasColumnType("nvarchar(max)")
                                .HasComment("显示名，有时它是昵称或简称(系统内)的意思");

                            b1.Property<string>("Name")
                                .HasMaxLength(64)
                                .HasColumnType("nvarchar(64)")
                                .HasComment("正式名称，拥有相对稳定性");

                            b1.Property<string>("ShortName")
                                .HasMaxLength(32)
                                .HasColumnType("nvarchar(32)")
                                .HasComment("正式简称，对正式的组织机构通常简称也是规定的");

                            b1.HasKey("PlMerchantId");

                            b1.ToTable("Merchants");

                            b1.WithOwner()
                                .HasForeignKey("PlMerchantId");
                        });

                    b.Navigation("Address");

                    b.Navigation("Name");
                });

            modelBuilder.Entity("PowerLms.Data.PlOrganization", b =>
                {
                    b.HasOne("PowerLms.Data.PlOrganization", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.OwnsOne("PowerLms.Data.PlSimpleOwnedAddress", "Address", b1 =>
                        {
                            b1.Property<Guid>("PlOrganizationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Fax")
                                .HasMaxLength(28)
                                .HasColumnType("nvarchar(28)")
                                .HasComment("传真");

                            b1.Property<string>("FullAddress")
                                .HasColumnType("nvarchar(max)")
                                .HasComment("详细地址");

                            b1.Property<string>("Tel")
                                .HasMaxLength(28)
                                .HasColumnType("nvarchar(28)")
                                .HasComment("电话");

                            b1.HasKey("PlOrganizationId");

                            b1.ToTable("PlOrganizations");

                            b1.WithOwner()
                                .HasForeignKey("PlOrganizationId");
                        });

                    b.OwnsOne("PowerLms.Data.PlOwnedName", "Name", b1 =>
                        {
                            b1.Property<Guid>("PlOrganizationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("DisplayName")
                                .HasColumnType("nvarchar(max)")
                                .HasComment("显示名，有时它是昵称或简称(系统内)的意思");

                            b1.Property<string>("Name")
                                .HasMaxLength(64)
                                .HasColumnType("nvarchar(64)")
                                .HasComment("正式名称，拥有相对稳定性");

                            b1.Property<string>("ShortName")
                                .HasMaxLength(32)
                                .HasColumnType("nvarchar(32)")
                                .HasComment("正式简称，对正式的组织机构通常简称也是规定的");

                            b1.HasKey("PlOrganizationId");

                            b1.ToTable("PlOrganizations");

                            b1.WithOwner()
                                .HasForeignKey("PlOrganizationId");
                        });

                    b.Navigation("Address");

                    b.Navigation("Name");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PowerLms.Data.PlPermission", b =>
                {
                    b.HasOne("PowerLms.Data.PlPermission", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PowerLms.Data.PlRole", b =>
                {
                    b.OwnsOne("PowerLms.Data.PlOwnedName", "Name", b1 =>
                        {
                            b1.Property<Guid>("PlRoleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("DisplayName")
                                .HasColumnType("nvarchar(max)")
                                .HasComment("显示名，有时它是昵称或简称(系统内)的意思");

                            b1.Property<string>("Name")
                                .HasMaxLength(64)
                                .HasColumnType("nvarchar(64)")
                                .HasComment("正式名称，拥有相对稳定性");

                            b1.Property<string>("ShortName")
                                .HasMaxLength(32)
                                .HasColumnType("nvarchar(32)")
                                .HasComment("正式简称，对正式的组织机构通常简称也是规定的");

                            b1.HasKey("PlRoleId");

                            b1.ToTable("PlRoles");

                            b1.WithOwner()
                                .HasForeignKey("PlRoleId");
                        });

                    b.Navigation("Name");
                });

            modelBuilder.Entity("PowerLms.Data.OwWf", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("PowerLms.Data.OwWfNode", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("PowerLms.Data.OwWfTemplate", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("PowerLms.Data.OwWfTemplateNode", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("PowerLms.Data.PlOrganization", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("PowerLms.Data.PlPermission", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
